"A response from user api"
type userQuery {
  sucess: Boolean!
  data: User
}

"A user data"
type User {
  uid: String!
  nombres: String!
  email: String!
  url_imagen: String
  fecha_registro: String
  fecha_nacimiento: String
  rol: String
}

type Store {
  tienda_id: ID!
  uid: String
  nombre: String
  fecha_suscripcion: String
  direccion: String
  descripcion: String
  fotos: String
}

"A particular intergalactic location available for booking"
type Listing {
  id: ID!
  "The listing's title"
  title: String!
  "The listing's description"
  description: String!
  "The number of beds available"
  numOfBeds: Int
  "The cost per night"
  costPerNight: Float
  "Indicates whether listing is closed for bookings (on hiatus)"
  closedForBookings: Boolean
  "The amenities available for this listing"
  amenities: [Amenity!]!
}

type Amenity {
  id: ID!
  "The amenity category the amenity belongs to"
  category: String!
  "The amenity's name"
  name: String!
}

type Query {
  "A curated array of listings to feature on the homepage"
  featuredListings: [Listing!]!
  "Returns the details about this listing"
  listing(id: ID!): Listing
  "returns user query object"
  userQuery(id: ID!): userQuery
  "Returns list of all stores"
  getStores: [Store]
}

type Mutation {
  "Creates a new listing"
  createListing(input: CreateListingInput!): CreateListingResponse!
  "creates a user"
  createUser(input: CreateUserInput!): CreateUserResponse!
  createStore(input: CreateStoreInput!): CreateUserResponse!
  deleteStore(id: ID!): CreateUserResponse!
}

input CreateListingInput {
  "The listing's title"
  title: String!
  "The listing's description"
  description: String!
  "The number of beds available"
  numOfBeds: Int!
  "The cost per night"
  costPerNight: Float!
  "Indicates whether listing is closed for bookings (on hiatus)"
  closedForBookings: Boolean
  "The Listing's amenities"
  amenities: [ID!]!
}

type CreateListingResponse {
  "Similar to HTTP status code, represents the status of the mutation"
  code: Int!
  "Indicates whether the mutation was successful"
  success: Boolean!
  "Human-readable message for the UI"
  message: String!
  "The newly created listing"
  listing: Listing
}

input CreateUserInput {
  uid: String!
  nombres: String!
  email: String!
  url_imagen: String!
  fecha_registro: String!
  fecha_nacimiento: String!
  rol: String! 
}

input CreateStoreInput {
  tienda_id: ID!
  uid: String
  nombre: String
  fecha_suscripcion: String
  direccion: String
  descripcion: String
  fotos: String
}

type CreateUserResponse {
  "Similar to HTTP status code, represents the status of the mutation"
  code: Int!
  "Indicates whether the mutation was successful"
  success: Boolean!
  "Human-readable message for the UI"
  message: String!
}